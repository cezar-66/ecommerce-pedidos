version: '3.8'

services:
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_LISTENER: INSIDE-kafka:9092
      KAFKA_LISTENER_INTERNAL: INSIDE-kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_PORT: 9092
    ports:
      - "9092:9092"
    networks:
      - backend
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "nc", "-z", "INSIDE-kafka", "9092"]
      interval: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 4g
        reservations:
          memory: 2g

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2g
        reservations:
          memory: 1g

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xmx2g -Xms2g
    ports:
      - "9200:9200"
    networks:
      - backend
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 4g
        reservations:
          memory: 2g

networks:
  backend:
    driver: bridge

volumes:
  esdata:
    driver: local